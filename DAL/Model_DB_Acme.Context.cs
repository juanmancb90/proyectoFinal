

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DAL
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class DB_AcmeEntities : DbContext
{
    public DB_AcmeEntities()
        : base("name=DB_AcmeEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<TB_Auditoria> TB_Auditoria { get; set; }

    public DbSet<TB_Categoria> TB_Categoria { get; set; }

    public DbSet<TB_Ciudad> TB_Ciudad { get; set; }

    public DbSet<TB_Cliente> TB_Cliente { get; set; }

    public DbSet<TB_DetallePedido> TB_DetallePedido { get; set; }

    public DbSet<TB_Documento> TB_Documento { get; set; }

    public DbSet<TB_Pedido> TB_Pedido { get; set; }

    public DbSet<TB_Producto> TB_Producto { get; set; }

    public DbSet<TB_Promocion> TB_Promocion { get; set; }

    public DbSet<TB_Vendedor> TB_Vendedor { get; set; }

    public DbSet<TB_LoginAuditoria> TB_LoginAuditoria { get; set; }


    public virtual int AutenticarVendedor(string nombreUsuario, string contrasenia, ObjectParameter resultado)
    {

        var nombreUsuarioParameter = nombreUsuario != null ?
            new ObjectParameter("NombreUsuario", nombreUsuario) :
            new ObjectParameter("NombreUsuario", typeof(string));


        var contraseniaParameter = contrasenia != null ?
            new ObjectParameter("Contrasenia", contrasenia) :
            new ObjectParameter("Contrasenia", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutenticarVendedor", nombreUsuarioParameter, contraseniaParameter, resultado);
    }


    public virtual int InsertarVendedor(string nombreCompleto, string numeroDocumento, string nombreUsuario, string contrasenia)
    {

        var nombreCompletoParameter = nombreCompleto != null ?
            new ObjectParameter("NombreCompleto", nombreCompleto) :
            new ObjectParameter("NombreCompleto", typeof(string));


        var numeroDocumentoParameter = numeroDocumento != null ?
            new ObjectParameter("NumeroDocumento", numeroDocumento) :
            new ObjectParameter("NumeroDocumento", typeof(string));


        var nombreUsuarioParameter = nombreUsuario != null ?
            new ObjectParameter("NombreUsuario", nombreUsuario) :
            new ObjectParameter("NombreUsuario", typeof(string));


        var contraseniaParameter = contrasenia != null ?
            new ObjectParameter("Contrasenia", contrasenia) :
            new ObjectParameter("Contrasenia", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarVendedor", nombreCompletoParameter, numeroDocumentoParameter, nombreUsuarioParameter, contraseniaParameter);
    }


    public virtual int ActualizarStockProducto(Nullable<int> iD_Producto, Nullable<int> cantidad)
    {

        var iD_ProductoParameter = iD_Producto.HasValue ?
            new ObjectParameter("ID_Producto", iD_Producto) :
            new ObjectParameter("ID_Producto", typeof(int));


        var cantidadParameter = cantidad.HasValue ?
            new ObjectParameter("Cantidad", cantidad) :
            new ObjectParameter("Cantidad", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarStockProducto", iD_ProductoParameter, cantidadParameter);
    }


    public virtual int ConsultarIdentificadorPedido(ObjectParameter iD_Pedido)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarIdentificadorPedido", iD_Pedido);
    }


    public virtual int InsertarDetallePedido(Nullable<int> iD_Pedido, Nullable<int> iD_Producto, Nullable<int> cantidad)
    {

        var iD_PedidoParameter = iD_Pedido.HasValue ?
            new ObjectParameter("ID_Pedido", iD_Pedido) :
            new ObjectParameter("ID_Pedido", typeof(int));


        var iD_ProductoParameter = iD_Producto.HasValue ?
            new ObjectParameter("ID_Producto", iD_Producto) :
            new ObjectParameter("ID_Producto", typeof(int));


        var cantidadParameter = cantidad.HasValue ?
            new ObjectParameter("Cantidad", cantidad) :
            new ObjectParameter("Cantidad", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarDetallePedido", iD_PedidoParameter, iD_ProductoParameter, cantidadParameter);
    }


    public virtual int InsertarPedido(Nullable<int> iD_Cliente, Nullable<decimal> totalBruto, Nullable<decimal> impuesto, Nullable<decimal> valorNeto)
    {

        var iD_ClienteParameter = iD_Cliente.HasValue ?
            new ObjectParameter("ID_Cliente", iD_Cliente) :
            new ObjectParameter("ID_Cliente", typeof(int));


        var totalBrutoParameter = totalBruto.HasValue ?
            new ObjectParameter("TotalBruto", totalBruto) :
            new ObjectParameter("TotalBruto", typeof(decimal));


        var impuestoParameter = impuesto.HasValue ?
            new ObjectParameter("Impuesto", impuesto) :
            new ObjectParameter("Impuesto", typeof(decimal));


        var valorNetoParameter = valorNeto.HasValue ?
            new ObjectParameter("ValorNeto", valorNeto) :
            new ObjectParameter("ValorNeto", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarPedido", iD_ClienteParameter, totalBrutoParameter, impuestoParameter, valorNetoParameter);
    }


    public virtual int InsertarProducto(Nullable<int> iD_Categoria, Nullable<int> iD_Promocion, string nombreProducto, string codigo, string descripcion, string fabricante, Nullable<int> stock, Nullable<decimal> impuesto, Nullable<decimal> valorUnitario, Nullable<bool> estado)
    {

        var iD_CategoriaParameter = iD_Categoria.HasValue ?
            new ObjectParameter("ID_Categoria", iD_Categoria) :
            new ObjectParameter("ID_Categoria", typeof(int));


        var iD_PromocionParameter = iD_Promocion.HasValue ?
            new ObjectParameter("ID_Promocion", iD_Promocion) :
            new ObjectParameter("ID_Promocion", typeof(int));


        var nombreProductoParameter = nombreProducto != null ?
            new ObjectParameter("NombreProducto", nombreProducto) :
            new ObjectParameter("NombreProducto", typeof(string));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var fabricanteParameter = fabricante != null ?
            new ObjectParameter("Fabricante", fabricante) :
            new ObjectParameter("Fabricante", typeof(string));


        var stockParameter = stock.HasValue ?
            new ObjectParameter("Stock", stock) :
            new ObjectParameter("Stock", typeof(int));


        var impuestoParameter = impuesto.HasValue ?
            new ObjectParameter("Impuesto", impuesto) :
            new ObjectParameter("Impuesto", typeof(decimal));


        var valorUnitarioParameter = valorUnitario.HasValue ?
            new ObjectParameter("ValorUnitario", valorUnitario) :
            new ObjectParameter("ValorUnitario", typeof(decimal));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("Estado", estado) :
            new ObjectParameter("Estado", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarProducto", iD_CategoriaParameter, iD_PromocionParameter, nombreProductoParameter, codigoParameter, descripcionParameter, fabricanteParameter, stockParameter, impuestoParameter, valorUnitarioParameter, estadoParameter);
    }


    public virtual int ActualizarProducto(Nullable<int> iD_Producto, Nullable<int> iD_Categoria, Nullable<int> iD_Promocion, string nombreProducto, string codigo, string descripcion, string fabricante, Nullable<int> stock, Nullable<decimal> impuesto, Nullable<decimal> valorUnitario, Nullable<bool> estado)
    {

        var iD_ProductoParameter = iD_Producto.HasValue ?
            new ObjectParameter("ID_Producto", iD_Producto) :
            new ObjectParameter("ID_Producto", typeof(int));


        var iD_CategoriaParameter = iD_Categoria.HasValue ?
            new ObjectParameter("ID_Categoria", iD_Categoria) :
            new ObjectParameter("ID_Categoria", typeof(int));


        var iD_PromocionParameter = iD_Promocion.HasValue ?
            new ObjectParameter("ID_Promocion", iD_Promocion) :
            new ObjectParameter("ID_Promocion", typeof(int));


        var nombreProductoParameter = nombreProducto != null ?
            new ObjectParameter("NombreProducto", nombreProducto) :
            new ObjectParameter("NombreProducto", typeof(string));


        var codigoParameter = codigo != null ?
            new ObjectParameter("Codigo", codigo) :
            new ObjectParameter("Codigo", typeof(string));


        var descripcionParameter = descripcion != null ?
            new ObjectParameter("Descripcion", descripcion) :
            new ObjectParameter("Descripcion", typeof(string));


        var fabricanteParameter = fabricante != null ?
            new ObjectParameter("Fabricante", fabricante) :
            new ObjectParameter("Fabricante", typeof(string));


        var stockParameter = stock.HasValue ?
            new ObjectParameter("Stock", stock) :
            new ObjectParameter("Stock", typeof(int));


        var impuestoParameter = impuesto.HasValue ?
            new ObjectParameter("Impuesto", impuesto) :
            new ObjectParameter("Impuesto", typeof(decimal));


        var valorUnitarioParameter = valorUnitario.HasValue ?
            new ObjectParameter("ValorUnitario", valorUnitario) :
            new ObjectParameter("ValorUnitario", typeof(decimal));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("Estado", estado) :
            new ObjectParameter("Estado", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", iD_ProductoParameter, iD_CategoriaParameter, iD_PromocionParameter, nombreProductoParameter, codigoParameter, descripcionParameter, fabricanteParameter, stockParameter, impuestoParameter, valorUnitarioParameter, estadoParameter);
    }


    public virtual ObjectResult<ConsultarPedidoFecha_Result> ConsultarPedidoFecha(string fecha)
    {

        var fechaParameter = fecha != null ?
            new ObjectParameter("Fecha", fecha) :
            new ObjectParameter("Fecha", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPedidoFecha_Result>("ConsultarPedidoFecha", fechaParameter);
    }


    public virtual ObjectResult<ConsultarDetallePedido_Result> ConsultarDetallePedido(Nullable<int> iD_Pedido)
    {

        var iD_PedidoParameter = iD_Pedido.HasValue ?
            new ObjectParameter("ID_Pedido", iD_Pedido) :
            new ObjectParameter("ID_Pedido", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetallePedido_Result>("ConsultarDetallePedido", iD_PedidoParameter);
    }


    public virtual int ActualizarPedidoSincronizado(Nullable<int> iD_Pedido)
    {

        var iD_PedidoParameter = iD_Pedido.HasValue ?
            new ObjectParameter("ID_Pedido", iD_Pedido) :
            new ObjectParameter("ID_Pedido", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPedidoSincronizado", iD_PedidoParameter);
    }


    public virtual int InsertarUsuarioLogin(string nombreUsuario)
    {

        var nombreUsuarioParameter = nombreUsuario != null ?
            new ObjectParameter("NombreUsuario", nombreUsuario) :
            new ObjectParameter("NombreUsuario", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarUsuarioLogin", nombreUsuarioParameter);
    }

}

}

